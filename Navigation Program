//Navigation Program
#include <Servo.h>  //Include servo library 
Servo servoLeft;  //Declare left and Right servos
Servo servoRIght;
void setup() {  //Built-in intialization block
  pinMode(7, INPUT);  //Set right whisker pin to input
  pinMode(5, INPUT);  //Set left whisker pin to input
  tone(4, 3000, 1000);  //Play tone for 1 second
  delay(1000);  //Delay to finish tone
  servoLeft.attach(13);  //Attach left servo to pin 13
  servoRight.attach(12);  //Attach Right servo to pin 12
}

void loop() {  //Main loop auto-repeats
  byte wLeft = digitalRead(5);  //Copy left result to wLeft
  byte wRight = digitalRead(7);  //Copy right result to wRight 
  if((wLeft == 0) && (wRight == 0)){  //If both whiskers contact
    backward(1000);  //back up 1 second
    turnLeft(800);  //turn left about 120 degrees
  }else if(wLeft == 0){  //if only left whisker contact
    backward(1000);  //Back up 1 second
    turnRight(400);  //turn right about 60 degrees
  }else if (wRight == 0){  //if only whisker contact
    backward(1000);  //back up 1 second
    turnLeft(400);  //turn left about 60 degrees
  }else{  //otherwise, no whisker contact
    forward(20);  //forward 1/50 of a second
  }
}
void forward(int time){  //forward function
  servoLeft.writeMicroseconds(1700);  //Left wheel counterclockwise
  servoRight.writeMicroseconds(1300);  //Right wheel clockwise
  delay(time);  //Maneuver for time ms
}
void turnLeft(int time){  //Left turn function
  servoLeft.writeMicroseconds(1300);  //Left wheel clockwise
  servoRight.writeMicroseconds(1300);  //Right wheel clockwise
  delay(time);  //Maneuver for time ms
}
void turnRight(int time){  //Right turn function
  servoLeft.writeMicroseconds(1700);  //Left wheel counterclockwise
  servoRight.writeMicroseconds(1700);  //Right wheel counterclockkwise
  delay(time);  //Maneuver for time ms
}
void backward(int time){  //Backward function
  servoLeft.writeMicroseconds(1300);  //Left wheel clockwise
  servoRight.writeMicroseconds(1700);  //Right wheel counterclockwise 
  delay(time);  //Maneuver for time 
}
